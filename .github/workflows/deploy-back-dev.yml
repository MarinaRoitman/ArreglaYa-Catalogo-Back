name: Deploy Backend to EC2 (dev)

on:
  push:
    branches: [ "dev" ]
    paths:
      - 'api/**'
  workflow_dispatch: {}

concurrency:
  group: deploy-back-dev
  cancel-in-progress: true

jobs:
  build-and-deploy-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # === Tests gate (optional) ===
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps (prod + test)
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt
          pip install -r api/requirements_test.txt

      # - name: Run unit tests
      #  run: pytest -q
      # === end tests gate ===

      - name: Debug secrets (masked)
        shell: bash
        run: |
          set -e
          echo "EC2_HOST: ${{ secrets.EC2_HOST }}"
          echo "EC2_USER: ${{ secrets.EC2_USER }}"
          test -n "${{ secrets.EC2_SSH_PASSWORD }}" || { echo "ERROR: Missing secret EC2_SSH_PASSWORD" >&2; exit 1; }
          LEN=$(printf "%s" "${{ secrets.EC2_SSH_PASSWORD }}" | wc -c | tr -d ' ')
          HASH=$(printf "%s" "${{ secrets.EC2_SSH_PASSWORD }}" | sha256sum | cut -c1-12)
          echo "EC2_SSH_PASSWORD length: ${LEN}"
          echo "EC2_SSH_PASSWORD sha256 (first 12): ${HASH}"

      - name: Ensure target dir (DEV)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ci
          password: ${{ secrets.EC2_SSH_PASSWORD }}
          script: |
            set -e
            mkdir -p /home/ubuntu/catalogo/api-dev

      - name: Copy backend code to EC2 (DEV)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ci
          password: ${{ secrets.EC2_SSH_PASSWORD }}
          source: "api/**"
          target: "/home/ubuntu/catalogo/api-dev"
          strip_components: 1
          overwrite: true
          rm: true
          timeout: 3m

      - name: Rebuild + up api-dev (single compose file)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ci
          password: ${{ secrets.EC2_SSH_PASSWORD }}
          script: |
            set -e
            # Build and start api-dev using ONLY the main compose file
            sudo docker compose \
              -f /home/ubuntu/catalogo/docker-compose.yml \
              build api-dev
            sudo docker compose \
              -f /home/ubuntu/catalogo/docker-compose.yml \
              up -d api-dev
            sudo docker compose \
              -f /home/ubuntu/catalogo/docker-compose.yml \
              logs --tail=50 api-dev
